/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MADFactory, MADFactoryInterface } from "../../Factory/MADFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFees",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRoyalty",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSplitter",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenType",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroMaxSupply",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "collectionName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "collectionSymbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royalties",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "tokenType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collectionToken",
        type: "address",
      },
    ],
    name: "CollectionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "CollectionTypeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "erc20Token",
        type: "address",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flag",
        type: "uint256",
      },
    ],
    name: "SplitterCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESS_ZERO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "impl",
        type: "bytes",
      },
    ],
    name: "addCollectionType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collectionId",
        type: "address",
      },
    ],
    name: "collectionCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionId",
        type: "address",
      },
    ],
    name: "collectionInfo",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "collectionType",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "collectionSalt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "blocknumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionIndex",
        type: "uint256",
      },
    ],
    name: "collectionTypes",
    outputs: [
      {
        internalType: "bytes",
        name: "collectionBytecode",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "madFeeTokenAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "tokenSalt",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "collectionName",
            type: "string",
          },
          {
            internalType: "string",
            name: "collectionSymbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royalty",
            type: "uint96",
          },
        ],
        internalType: "struct FactoryTypes.CreateCollectionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "madFeeTokenAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "tokenSalt",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "collectionName",
            type: "string",
          },
          {
            internalType: "string",
            name: "collectionSymbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royalty",
            type: "uint96",
          },
        ],
        internalType: "struct FactoryTypes.CreateCollectionParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "collectionToken",
        type: "address",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "splitterSalt",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "ambassador",
            type: "address",
          },
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ambassadorShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "projectShare",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "madFeeTokenAddress",
            type: "address",
          },
        ],
        internalType: "struct FactoryTypes.CreateSplitterParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createSplitter",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "creatorAuth",
    outputs: [
      {
        internalType: "bool",
        name: "stdout",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCreateCollection",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "madFeeTokenAddress",
        type: "address",
      },
    ],
    name: "feeCreateCollectionErc20",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
        ],
        internalType: "struct FeeHandlerFactory.Fee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCreateSplitter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "madFeeTokenAddress",
        type: "address",
      },
    ],
    name: "feeCreateSplitterErc20",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
        ],
        internalType: "struct FeeHandlerFactory.Fee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getDeployedAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getIDsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "madFeeTokenAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "invalidateCollectionFee",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "invalidateSplitterFee",
        type: "bool",
      },
    ],
    name: "invalidateFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeCreateCollectionNew",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeCreateSplitterNew",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeCreateCollectionErc20New",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeCreateSplitterErc20New",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "madFeeTokenAddress",
        type: "address",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "splitterInfo",
    outputs: [
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "splitterSalt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ambassadorShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "projectShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTokens",
    outputs: [
      {
        internalType: "address",
        name: "deployedCollections",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x346200006d5762004324388190036080601f8201601f19168101906001600160401b0382119082101762000071576020928291604052608039126200006d576080516001600160a01b03811681036200006d576200005d9062000085565b60405161420790816200011d8239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b33156200010f575f80546001600160a01b031916339081178255907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a3670de0b6b3a76400008060025560035580156200010f5760018190556001600160a01b03167f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64665f80a2565b63d92e233d5f526004601cfdfe6080604052600436101562000012575f80fd5b5f3560e01c806306fdde0314620001fa5780630b78f9c014620001f457806313af403514620001ee5780631b52c9c014620001e85780631f0c602d14620001e257806322ea34d514620001dc5780633bbed4a014620001d65780636042dd5d14620001d057806365e11e6e14620001ca57806366d003ac14620001c457806366e7950914620001be5780637133739114620001b857806376de0f3d14620001b25780638691fe4614620001ac5780638da5cb5b14620001a65780639750f2e014620001a057806397cf65af146200019a578063b37eea151462000194578063b7e7d278146200018e578063c0d786551462000188578063c661d4b11462000182578063cbf71c1c146200017c578063e4d73e591462000176578063f887ea401462000170578063f9f411d8146200016a578063fb0059e314620001645763fec89cd8146200015e575f80fd5b62001b05565b62001ae6565b62001a76565b620019f8565b6200189e565b62001806565b62001756565b620016de565b620015e9565b620010e1565b62001089565b62000fd3565b62000f9f565b62000f52565b62000e57565b62000c4f565b62000c33565b62000bfe565b62000aab565b620008a0565b6200082c565b62000447565b620003aa565b6200038b565b6200030a565b6200024f565b62000223565b5f5b838110620002125750505f910152565b818101518382015260200162000202565b346200024b575f6003193601126200024b57602080526707666163746f727960475260606020f35b5f80fd5b346200024b5760406003193601126200024b5760043560243573ffffffffffffffffffffffffffffffffffffffff5f54163303620002c157816040917f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1936002558060035582519182526020820152a1005b60046040517f1648fd01000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff8116036200024b57565b346200024b5760206003193601126200024b576004356200032b81620002eb565b73ffffffffffffffffffffffffffffffffffffffff90815f54163303620002c15780156200037e57805f5516337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d765f80a3005b63d92e233d5f526004601cfd5b346200024b575f6003193601126200024b576020600354604051908152f35b346200024b5760206003193601126200024b5760c0600435620003cd81620002eb565b73ffffffffffffffffffffffffffffffffffffffff8091165f52600660205260ff60405f2080549260018201549160036002820154910154928460405196848116885260a01c166020870152604086015260608501528116608084015260a01c16151560a0820152f35b90816101409103126200024b5790565b60206003193601126200024b5760043567ffffffffffffffff81116200024b576200047790369060040162000437565b6101009081810135916200048b83620002eb565b60c0820135156200080257620004c0620004ba600a5473ffffffffffffffffffffffffffffffffffffffff1690565b6200270e565b620004e6620004d26020840162001d38565b620004df83850162001b9a565b9062003027565b620004ff620004f9610120840162001d1e565b620030b4565b6200050a8262001b9a565b73ffffffffffffffffffffffffffffffffffffffff8116620007ef57506200053460025462002d0d565b620005426020830162001d38565b9062000552606084018462001cca565b90929062000564608086018662001cca565b9094906200057660e088018862001cca565b60a08901359791906200058b888b0162001b9a565b926200059b6101208c0162001d1e565b94600a54620005bd9073ffffffffffffffffffffffffffffffffffffffff1690565b96620005c862001c4c565b983690620005d69262002899565b88523690620005e59262002899565b60208701523690620005f79262002899565b60408501526060840187905260c0880135608085015273ffffffffffffffffffffffffffffffffffffffff1660a08401526bffffffffffffffffffffffff1660c083015273ffffffffffffffffffffffffffffffffffffffff1660e08201525f8184015233610120820152604085013562000672926200317a565b9081336200069e9073ffffffffffffffffffffffffffffffffffffffff165f52600960205260405f2090565b90620006aa91620028d4565b620006b86020850162001d38565b908401620006c69062001b9a565b620006d062001c6e565b3381529160ff1660208301526040858101359083015243606083015273ffffffffffffffffffffffffffffffffffffffff166080820152600160a0820152620007378273ffffffffffffffffffffffffffffffffffffffff165f52600660205260405f2090565b90620007439162002925565b62000752606084018462001cca565b9262000762608086018662001cca565b9190946101208701620007759062001d1e565b620007836020890162001d38565b936040519773ffffffffffffffffffffffffffffffffffffffff8998169a73ffffffffffffffffffffffffffffffffffffffff169960c0013593620007c9978962001d85565b037f53da1f292ba9ca211753ef0bfe01ba3e5626fd3c61b03d473ee950f4c91fb85b91a3005b620007fc90309062002ad4565b62000534565b60046040517f31c93643000000000000000000000000000000000000000000000000000000008152fd5b346200024b5760206003193601126200024b576004356200084d81620002eb565b73ffffffffffffffffffffffffffffffffffffffff90815f54163303620002c15780156200037e5780600155167f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64665f80a2005b60c06003193601126200024b5773ffffffffffffffffffffffffffffffffffffffff620008cc62001b70565b16158062000a8a575b15620008e757620008e5620025d4565b005b6200090e620008f562001b70565b73ffffffffffffffffffffffffffffffffffffffff1690565b15158062000a74575b8062000a67575b8062000a59575b156200093557620008e5620024dd565b62000943620008f562001b7e565b15158062000a43575b8062000a36575b8062000a28575b156200096a57620008e5620023e6565b62000978620008f562001b70565b15158062000a11575b8062000a04575b80620009f6575b80620009e9575b80620009db575b80620009c0575b15620009b457620008e562002179565b62adecf05f526004601cfd5b50612711620009d460843560643562001bd3565b10620009a4565b50612711608435106200099d565b5060636084351162000996565b506107d1606435106200098f565b5060636064351162000988565b5062000a20620008f562001b7e565b151562000981565b50612711608435106200095a565b5060636084351162000953565b5062000a52620008f562001b70565b156200094c565b506107d16064351062000925565b506063606435116200091e565b5062000a83620008f562001b7e565b1562000917565b5062000a99620008f562001b7e565b15620008d5565b801515036200024b57565b346200024b5760606003193601126200024b5760043562000acc81620002eb565b60243562000ada8162000aa0565b6044359062000ae98262000aa0565b73ffffffffffffffffffffffffffffffffffffffff805f54163303620002c157831690811562000bd45762000b68575b5062000b2157005b620008e59062000b6262000b3462001c3b565b915f83525f602084015273ffffffffffffffffffffffffffffffffffffffff165f52600560205260405f2090565b620026cb565b62000bcd9060016040519162000b7e836200150f565b5f835260208301905f82525f52600460205260405f209251835551151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b5f62000b19565b60046040517fd23f9521000000000000000000000000000000000000000000000000000000008152fd5b346200024b575f6003193601126200024b57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b346200024b575f6003193601126200024b5760206040515f8152f35b346200024b5760406003193601126200024b576024600435813567ffffffffffffffff8082116200024b57366023830112156200024b5781600401359081116200024b5736602482840101116200024b5773ffffffffffffffffffffffffffffffffffffffff5f54163303620002c157825f52602093600860205260405f209262000ce78362000ce086546200148e565b8662001be7565b5f91601f841160011462000d73575062000d3b939495509082915f9262000d64575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b90555b7f44e972c56c15144b740184a8e110ba77f8929877b701f0dce3df06ebc39a09235f80a2005b602492500101355f8062000d09565b95917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084169662000da7865f5260205f2090565b935f915b89831062000e0d575050508360019596971062000dd1575b505050811b01905562000d3e565b01602401357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600384901b60f8161c191690555f808062000dc3565b908060018597848396978901013581550196019301919062000dab565b60031960409101126200024b5760043562000e4581620002eb565b9060243562000e5481620002eb565b90565b346200024b5762000e683662000e2a565b9060016040805160096020820152848282015220541562000f4a575b9073ffffffffffffffffffffffffffffffffffffffff8084165f52600960205260405f2054935f5b85811062000ec6575b6040518515158152602090f35b0390f35b62000f22620008f562000f028362000efc8673ffffffffffffffffffffffffffffffffffffffff165f52600960205260405f2090565b62001a5a565b905473ffffffffffffffffffffffffffffffffffffffff9160031b1c1690565b8385161462000f345760010162000eac565b50505050505062000ec260015f80808062000eb5565b505f62000e84565b346200024b5760206003193601126200024b5773ffffffffffffffffffffffffffffffffffffffff60043562000f8881620002eb565b165f526009602052602060405f2054604051908152f35b346200024b575f6003193601126200024b57602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346200024b5760e06200103362000fea3662000e2a565b73ffffffffffffffffffffffffffffffffffffffff9291928093165f52600760205260405f209073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b908082541691600181015491806002830154169060038301541660048301549160ff600660058601549501541694604051968752602087015260408601526060850152608084015260a0830152151560c0820152f35b346200024b5760206003193601126200024b5773ffffffffffffffffffffffffffffffffffffffff600435620010bf81620002eb565b165f526006602052602060ff600360405f20015460a01c166040519015158152f35b60406003193601126200024b5760043567ffffffffffffffff81116200024b576200111190369060040162000437565b6200111e602435620002eb565b610100810135906200113082620002eb565b60c08101351562000802576200115f620004ba600a5473ffffffffffffffffffffffffffffffffffffffff1690565b62001180620011716020830162001d38565b620004df610100840162001b9a565b62001193620004f9610120830162001d1e565b6200119e8162001b9a565b73ffffffffffffffffffffffffffffffffffffffff81166200147b5750620011c860025462002d0d565b620011d66020820162001d38565b620011e5606083018362001cca565b90620011f5608085018562001cca565b906200120560e087018762001cca565b62001214610100890162001b9a565b92620012246101208a0162001d1e565b94600a54620012469073ffffffffffffffffffffffffffffffffffffffff1690565b966200125162001c4c565b9836906200125f9262002899565b885236906200126e9262002899565b60208701523690620012809262002899565b604085015260a086810135606086015260c0870135608086015273ffffffffffffffffffffffffffffffffffffffff909116908401526bffffffffffffffffffffffff1660c083015273ffffffffffffffffffffffffffffffffffffffff1660e082015273ffffffffffffffffffffffffffffffffffffffff602435166101008201523361012082015260408301356200131a926200317a565b908133620013469073ffffffffffffffffffffffffffffffffffffffff165f52600960205260405f2090565b906200135291620028d4565b620013606020820162001d38565b6200136f610100830162001b9a565b6200137962001c6e565b3381529160ff1660208301526040838101359083015243606083015273ffffffffffffffffffffffffffffffffffffffff166080820152600160a0820152620013e08373ffffffffffffffffffffffffffffffffffffffff165f52600660205260405f2090565b90620013ec9162002925565b620013fb606082018262001cca565b92906200140c608084018462001cca565b946200141c610120860162001d1e565b946200142b6020820162001d38565b916040519673ffffffffffffffffffffffffffffffffffffffff8897169973ffffffffffffffffffffffffffffffffffffffff16986024359560a08501359460c0013593620007c9988a62001de2565b6200148890309062002ad4565b620011c8565b90600182811c92168015620014d7575b6020831014620014aa57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f16916200149e565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040810190811067ffffffffffffffff8211176200152c57604052565b620014e2565b6080810190811067ffffffffffffffff8211176200152c57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176200152c57604052565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093620015cf8151809281875287808801910162000200565b0116010190565b90602062000e5492818152019062001591565b346200024b576020806003193601126200024b576004355f526008815260405f2090604051905f9280546200161e816200148e565b808552916001918083169081156200169b57506001146200165a575b62000ec2856200164d818903826200154f565b60405191829182620015d6565b5f908152838120939550925b82841062001687575050508162000ec2936200164d92820101935f6200163a565b805485850187015292850192810162001666565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686860152505050151560051b82010191506200164d8162000ec25f6200163a565b346200024b5760206003193601126200024b57600435620016ff81620002eb565b73ffffffffffffffffffffffffffffffffffffffff90815f54163303620002c1576200172b816200270e565b80600a55167f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc805f80a2005b346200024b5760406003193601126200024b576020620017e86024356200177d81620002eb565b6040805173ffffffffffffffffffffffffffffffffffffffff90921684830190815260043560208201529190620017df9082908401037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352826200154f565b5190206200278c565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b346200024b5760206003193601126200024b5773ffffffffffffffffffffffffffffffffffffffff6004356200183c81620002eb565b6200184662001cb0565b5016801562000bd4575f52600560205262000ec260405f2060ff60016040519262001871846200150f565b80548452015416151560208201526040519182918291909160208060408301948051845201511515910152565b346200024b5760606003193601126200024b57604435602435600435620018c583620002eb565b73ffffffffffffffffffffffffffffffffffffffff805f54163303620002c1578316801562000bd4577f660e7095066fd91b05cfad0851f3cefa62b4a62de319c3c13ef7db8982e785019362001979620019f3926001604051916200192a836200150f565b86835260208301908282525f52600460205260405f209251835551151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b620019be6040516200198b816200150f565b8581526001602082015262000b628373ffffffffffffffffffffffffffffffffffffffff165f52600560205260405f2090565b6040519384938491604091949373ffffffffffffffffffffffffffffffffffffffff9160608501968552602085015216910152565b0390a1005b346200024b575f6003193601126200024b57602073ffffffffffffffffffffffffffffffffffffffff600a5416604051908152f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b805482101562001a70575f5260205f2001905f90565b62001a2d565b346200024b5760406003193601126200024b5760043562001a9781620002eb565b6024359073ffffffffffffffffffffffffffffffffffffffff8091165f52600960205260405f2080548310156200024b5760209262001ad69162001a5a565b9190546040519260031b1c168152f35b346200024b575f6003193601126200024b576020600254604051908152f35b346200024b5760206003193601126200024b5773ffffffffffffffffffffffffffffffffffffffff60043562001b3b81620002eb565b62001b4562001cb0565b5016801562000bd4575f52600460205262000ec260405f2060ff60016040519262001871846200150f565b60243562000e5481620002eb565b60443562000e5481620002eb565b60a43562000e5481620002eb565b3562000e5481620002eb565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b9190820180921162001be157565b62001ba6565b601f821162001bf557505050565b5f5260205f20906020601f840160051c8301931062001c30575b601f0160051c01905b81811062001c24575050565b5f815560010162001c18565b909150819062001c0f565b6040519062001c4a826200150f565b565b60405190610140820182811067ffffffffffffffff8211176200152c57604052565b6040519060c0820182811067ffffffffffffffff8211176200152c57604052565b6040519060e0820182811067ffffffffffffffff8211176200152c57604052565b6040519062001cbf826200150f565b5f6020838281520152565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156200024b570180359067ffffffffffffffff82116200024b576020019181360383136200024b57565b356bffffffffffffffffffffffff811681036200024b5790565b3560ff811681036200024b5790565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093818652868601375f8582860101520116010190565b9498979262001dc76bffffffffffffffffffffffff9160ff9662001db860c09a955f9c9760e08c5260e08c019162001d47565b9189830360208b015262001d47565b99166040860152606085015260808401521660a08201520152565b979262001e396bffffffffffffffffffffffff9160ff9662001e2a73ffffffffffffffffffffffffffffffffffffffff9a95999e9d9960c09c9760e08f818152019162001d47565b8c810360208e01529162001d47565b9a166040890152606088015260808701521660a085015216910152565b9061271091820391821162001be157565b8181029291811591840414171562001be157565b6040519062001e8a826200150f565b6001825260203681840137565b6040519062001ea68262001532565b600382526060366020840137565b604051906060820182811067ffffffffffffffff8211176200152c5760405260028252604082602036910137565b80511562001a705760200190565b80516001101562001a705760400190565b80516002101562001a705760600190565b600660c062001c4a936200202073ffffffffffffffffffffffffffffffffffffffff62001f7d81845116879073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6020830151600187015562001fd681604085015116600288019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b606083015116600386019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6080810151600485015560a081015160058501550151151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b9081518082526020808093019301915f5b8281106200208a575050505090565b8351855293810193928101926001016200207b565b9081518082526020808093019301915f5b828110620020bf575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101620020b0565b929162002118604091620021096003946060885260608801906200206a565b9086820360208801526200209f565b930152565b929162002118604091620021096002946060885260608801906200206a565b929162002118604091620021096001946060885260608801906200206a565b929162002118604091620021095f946060885260608801906200206a565b6200218362001b8c565b73ffffffffffffffffffffffffffffffffffffffff90808216620023d35750620021af60035462002d0d565b60643590620021d8620021d0620021c68462001e56565b6084359062001e67565b612710900490565b90612710808310156200234e57507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f90620022276200221662001b70565b6200222062001b7e565b9062002d74565b936200233462002238858362002e5a565b945b600435906200224b87898462002f3b565b93620022cc6200225a62001b70565b620022af6200226862001b7e565b916200227362001c8f565b73ffffffffffffffffffffffffffffffffffffffff8a16815296602088015273ffffffffffffffffffffffffffffffffffffffff166040870152565b73ffffffffffffffffffffffffffffffffffffffff166060850152565b608083015260a0820152600160c08201526200232e836200230b3373ffffffffffffffffffffffffffffffffffffffff165f52600760205260405f2090565b9073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b62001f12565b620023496040519283921695339583620020ea565b0390a3565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91620023346200238162001e7b565b95620023b66200239062001b7e565b6200239b8962001ee2565b9073ffffffffffffffffffffffffffffffffffffffff169052565b620023c062001e7b565b95620023cc8762001ee2565b526200223a565b620023e090309062002cb4565b620021af565b620023f062001b8c565b73ffffffffffffffffffffffffffffffffffffffff90808216620024ca57506200241c60035462002d0d565b6064359062002433620021d0620021c68462001e56565b90612710808310156200249757507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f90620024716200221662001b70565b936200248262002238858362002e5a565b6200234960405192839216953395836200211d565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91620024826200238162001e7b565b620024d790309062002cb4565b6200241c565b620024e762001b8c565b73ffffffffffffffffffffffffffffffffffffffff90808216620025c157506200251360035462002d0d565b606435906200252a620021d0620021c68462001e56565b90612710808310156200258e57507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f90620025686200221662001b70565b936200257962002238858362002e5a565b6200234960405192839216953395836200213c565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91620025796200238162001e7b565b620025ce90309062002cb4565b62002513565b620025de62001b8c565b73ffffffffffffffffffffffffffffffffffffffff90808216620026b857506200260a60035462002d0d565b6064359062002621620021d0620021c68462001e56565b90612710808310156200268557507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f906200265f6200221662001b70565b936200267062002238858362002e5a565b6200234960405192839216953395836200215b565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91620026706200238162001e7b565b620026c590309062002cb4565b6200260a565b6001602062001c4a93805184550151151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b156200037e57565b67ffffffffffffffff81116200152c57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6040519062002760826200150f565b601082527f67363d3d37363d34f03d5260086018f3000000000000000000000000000000006020830152565b62000e54906200279b62002751565b602081519101206040519060208201927fff0000000000000000000000000000000000000000000000000000000000000084523060601b60218401526035830152605582015260558152620027f08162001532565b5190206040517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060208201927fd694000000000000000000000000000000000000000000000000000000000000845260601b1660228201527f01000000000000000000000000000000000000000000000000000000000000006036820152601781526200287d816200150f565b51902073ffffffffffffffffffffffffffffffffffffffff1690565b929192620028a78262002716565b91620028b760405193846200154f565b8294818452818301116200024b578281602093845f960137010152565b8054680100000000000000008110156200152c57620028f99160018201815562001a5a565b73ffffffffffffffffffffffffffffffffffffffff9291928084549260031b9316831b921b1916179055565b9060a062002a7f9162002a38600373ffffffffffffffffffffffffffffffffffffffff956200299287855116829073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b602084015181547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1660a09190911b74ff00000000000000000000000000000000000000001617815560408401516001820155606084015160028201550194608083015116859073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b015182547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690151560a01b74ff0000000000000000000000000000000000000000161790565b9055565b908160409103126200024b5760206040519162002aa0836200150f565b80518352015162002ab18162000aa0565b602082015290565b6040513d5f823e3d90fd5b908160209103126200024b575190565b604080517ffec89cd800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152909392909190849083908180602481015b03915afa91821562002c4f575f9262002c7e575b5062002b5562002b5160208451940151151590565b1590565b62002c555783517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff9190911690602081602481855afa801562002c4f5783915f9162002c19575b501062002bf05762001c4a92935062002be760015473ffffffffffffffffffffffffffffffffffffffff1690565b90339062003376565b600484517f2d8768f9000000000000000000000000000000000000000000000000000000008152fd5b62002c40915060203d60201162002c47575b62002c3781836200154f565b81019062002ac4565b5f62002bb9565b503d62002c2b565b62002ab9565b600484517fd23f9521000000000000000000000000000000000000000000000000000000008152fd5b62002ca4919250843d861162002cac575b62002c9b81836200154f565b81019062002a83565b905f62002b3c565b503d62002c8f565b604080517fcbf71c1c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201529093929091908490839081806024810162002b28565b80341062002d4a575f8080809373ffffffffffffffffffffffffffffffffffffffff600154165af11562002d3d57565b63b12d13eb5f526004601cfd5b60046040517f2d8768f9000000000000000000000000000000000000000000000000000000008152fd5b919062002d8062001e97565b5073ffffffffffffffffffffffffffffffffffffffff8381161590818062002e4f575b1562002dc957505050905062002db862001e7b565b9062001c4a336200239b8462001ee2565b821662002dfc57505062002dec62002de062001eb4565b926200239b8462001ee2565b62001c4a336200239b8462001ef0565b9092901562002e14575062002dec62002de062001eb4565b9162002e3f9062002e3462002e2862001e97565b946200239b8662001ee2565b6200239b8462001ef0565b62001c4a336200239b8462001f01565b508083161562002da3565b8015808062002f19575b1562002e895750505062002e7762001e7b565b61271062002e858262001ee2565b5290565b8262002ebf5750905062002eb462002ea062001eb4565b918062002ead8462001ee2565b5262001e56565b62002e858262001ef0565b1562002ed4575062002eb462002ea062001eb4565b62002ede62001e97565b918162002eeb8462001ee2565b528062002ef88462001ef0565b52810180911162001be15762002f0e9062001e56565b62002e858262001f01565b50821562002e64565b9062002f376020928281519485920162000200565b0190565b6040805133602082019081528183019390935281815262000e54946200300d949362003021937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093620030149262002fe1929162002ffe919062002fa16060826200154f565b5190209762002ff1610ca59684519762002fbf602082018a6200154f565b8089526200352d60208a0139845195869386602086015260608501906200209f565b908984830301868501526200206a565b038681018452836200154f565b51968793602085019062002f22565b9062002f22565b039081018452836200154f565b62003432565b9060066200306060ff92335f52600760205260405f209073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b015416156200308a575f52600860205260405f2054156200307d57565b63a1e9dd9d5f526004601cfd5b60046040517feed7778f000000000000000000000000000000000000000000000000000000008152fd5b6103e8601982061515911117620030c757565b63e0e54ced5f526004601cfd5b5f92918154620030e4816200148e565b9260019180831690811562003140575060011462003103575b50505050565b9091929394505f5260209060205f20905f915b8583106200312e575050505001905f808080620030fd565b80548584015291830191810162003116565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001684525050508115159091020191505f808080620030fd565b6200302162000e54936040936200301485519260ff60209385620031c58682019233846020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0395620031f97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0978881018352826200154f565b51902096165f52600883526200300d875f2097620033698151809487808301526200335c81516200328c6200323c61014092838988015261018087019062001591565b620032778c860151917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc092838983030160608a015262001591565b90888601519087830301608088015262001591565b92606081015160a0860152608081015160c0860152620032c960a082015160e087019073ffffffffffffffffffffffffffffffffffffffff169052565b6200333c60c082015192620032f161010094858901906bffffffffffffffffffffffff169052565b60e0830151936200331d61012095868a019073ffffffffffffffffffffffffffffffffffffffff169052565b83015173ffffffffffffffffffffffffffffffffffffffff1690870152565b015173ffffffffffffffffffffffffffffffffffffffff16610160840152565b038781018552846200154f565b51978894850190620030d4565b601c5f60649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d1560015f5114171615620033bf575f606052604052565b637939f4245f526004601cfd5b15620033d457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f494e495449414c495a4154494f4e5f4641494c454400000000000000000000006044820152fd5b9190826200343f62002751565b6020815191015ff59273ffffffffffffffffffffffffffffffffffffffff841615620034ce575f916200347383926200278c565b9482602083519301915af13d15620034c8573d620034918162002716565b90620034a160405192836200154f565b81525f60203d92013e5b80620034bd575b62001c4a90620033cc565b50813b1515620034b2565b620034ab565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4445504c4f594d454e545f4641494c45440000000000000000000000000000006044820152fdfe60406080815262000ca5803803806200001881620002a5565b92833981018282820312620002805781516001600160401b0390818111620002805783019180601f840112156200028057825191602094620000646200005e85620002cb565b620002a5565b948686868152018760059660051b8301019185831162000280578801905b8282106200028457505050858101519182116200028057019080601f8301121562000280578151620000b86200005e82620002cb565b92868085848152019260051b820101928311620002805786809101915b8383106200026f5750505050825192815184036200025b5783156200024a575f5b8481106200010d5786516109ac9081620002f98239f35b6001600160a01b03620001218284620002e3565b511690620001308185620002e3565b518215620002395780156200022857825f52858852885f20546200021757600680549068010000000000000000821015620002035760018201808255821015620001ef575f52885f20018360018060a01b0319825416179055825f5285885280895f20555f54818101809111620001db576001937f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac928b925f5582519182528a820152a101620000f6565b634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b885163215a865160e11b8152600490fd5b885163040357dd60e21b8152600490fd5b88516384ff3e1b60e01b8152600490fd5b8551637b21919d60e01b8152600490fd5b85516001621398b960e31b03198152600490fd5b8251815291810191879101620000d5565b5f80fd5b81516001600160a01b03811681036200028057815290880190880162000082565b6040519190601f01601f191682016001600160401b038111838210176200020357604052565b6001600160401b038111620002035760051b60200190565b8051821015620001ef5760209160051b01019056fe604060808152600436101561004b575b3615610019575f80fd5b513381523460208201527f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77090604090a1005b5f3560e01c8063191655871461041c578063283248be146103cd5780633a98ef39146103b0578063406072a91461035957806348b750441461032e578063580fc80a146102b85780635be7fde81461024d5780639852595c14610209578063a3f8eace146101e4578063b34c8caf146101a0578063c45ac0501461016c578063d79779b214610128578063e33b7de31461010a5763e919ecad0361000f5734610106575f600319360112610106576020906006549051908152f35b5f80fd5b5034610106575f600319360112610106576020906001549051908152f35b50346101065760206003193601126101065760209073ffffffffffffffffffffffffffffffffffffffff61015a6104b8565b165f5260038252805f20549051908152f35b503461010657806003193601126101065760209061019961018b6104b8565b6101936104db565b906107d1565b9051908152f35b50346101065760206003193601126101065760209073ffffffffffffffffffffffffffffffffffffffff6101d26104b8565b165f5260058252805f20549051908152f35b5034610106576020600319360112610106576020906101996102046104b8565b610794565b50346101065760206003193601126101065760209073ffffffffffffffffffffffffffffffffffffffff61023b6104b8565b165f5260028252805f20549051908152f35b34610106575f600319360112610106576006545f5b81811061026b57005b8073ffffffffffffffffffffffffffffffffffffffff61028c600193610456565b90549060031b1c1661029d81610794565b6102a9575b5001610262565b6102b290610538565b836102a2565b34610106576020600319360112610106576102d16104b8565b6006545f5b8181106102df57005b8073ffffffffffffffffffffffffffffffffffffffff610300600193610456565b90549060031b1c1661031281866107d1565b61031e575b50016102d6565b610328908561063c565b84610317565b503461010657600319360112610106576103576103496104b8565b6103516104db565b9061063c565b005b50346101065780600319360112610106576020906103756104b8565b61037d6104db565b9073ffffffffffffffffffffffffffffffffffffffff8091165f5260048452825f2091165f528252805f20549051908152f35b5034610106575f600319360112610106576020905f549051908152f35b503461010657602060031936011261010657600435906006548210156101065773ffffffffffffffffffffffffffffffffffffffff61040d602093610456565b92905490519260031b1c168152f35b346101065760206003193601126101065760043573ffffffffffffffffffffffffffffffffffffffff811681036101065761035790610538565b60065481101561048b5760065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361010657565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361010657565b9190820180921161050b57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b73ffffffffffffffffffffffffffffffffffffffff16805f5260056020526040805f2054156106135761056a82610794565b9182156105ea57805f52600260205261058683835f20546104fe565b815f526002602052825f205561059e836001546104fe565b6001555f80808086855af1156105dd577fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b0569282519182526020820152a1565b63b12d13eb5f526004601cfd5b600482517fb8e10e7e000000000000000000000000000000000000000000000000000000008152fd5b600490517fb317087b000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff80831692835f526005602052604092835f20541561076b5761067382826107d1565b92831561074257604460105f84819460209616998a83526004875289832090835286528882206106a48982546104fe565b9055898252600386528882206106bb8982546104fe565b905586601452876034526fa9059cbb00000000000000000000000082525af13d1560015f5114171615610735575f603452915173ffffffffffffffffffffffffffffffffffffffff909216825260208201527f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a90604090a2565b6390b8ec185f526004601cfd5b600485517fb8e10e7e000000000000000000000000000000000000000000000000000000008152fd5b600484517fb317087b000000000000000000000000000000000000000000000000000000008152fd5b6107ce906107a547600154906104fe565b73ffffffffffffffffffffffffffffffffffffffff82165f52600260205260405f2054916108ff565b90565b9073ffffffffffffffffffffffffffffffffffffffff80921660408051937f70a0823100000000000000000000000000000000000000000000000000000000855230600486015260208086602481875afa9586156108f5575f96610862575b506108496107ce96855f5260038352845f2054906104fe565b935f5260048152825f209185165f52525f2054916108ff565b9550803d82116108ee575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f820116870187811067ffffffffffffffff8211176108c1578291889186528101031261010657945194610849610830565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b503d61086d565b83513d5f823e3d90fd5b73ffffffffffffffffffffffffffffffffffffffff165f52600560205260405f20549081810291818304149015171561050b575f54908115610949570490810390811161050b5790565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212204438d449333bab050b08c8d1a039f6649a64a0d9364d292dc38ef01da116418864736f6c63430008160033a264697066735822122095ed5214069711de4e7afda24981255cb8d9f6a77de4a96ca1131bb6a5949f1e64736f6c63430008160033";

type MADFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADFactory__factory extends ContractFactory {
  constructor(...args: MADFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_recipient, overrides || {});
  }
  override deploy(
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_recipient, overrides || {}) as Promise<
      MADFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MADFactory__factory {
    return super.connect(runner) as MADFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADFactoryInterface {
    return new Interface(_abi) as MADFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MADFactory {
    return new Contract(address, _abi, runner) as unknown as MADFactory;
  }
}
