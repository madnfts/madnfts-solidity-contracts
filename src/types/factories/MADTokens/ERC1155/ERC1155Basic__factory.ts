/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
  FactoryTypes,
} from "../../../MADTokens/ERC1155/ERC1155Basic";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
        ],
        internalType: "struct FactoryTypes.CollectionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "ArrayLengthsMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPriceAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyBoundExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterIsEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC1155ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "balances",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20PaymentsEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "liveBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerHasAuthority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_hasAuthority",
        type: "bool",
      },
    ],
    name: "setRouterHasAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101408060405234620001d15762002f829081380380620000208162000210565b938439820191602081840312620001d15780516001600160401b0391828211620001d157019182840312620001d15762000059620001e9565b928251828111620001d157816200007291850162000259565b84526020830151828111620001d157816200008f91850162000259565b60208501526040830151918211620001d157620000ae91830162000259565b60408301526060810151606083015260808101516080830152620000d560a08201620002b0565b60a0830152620000e860c08201620002c5565b60c0830152620000fb60e08201620002b0565b60e0830152620001336101009262000115848401620002b0565b8482015262000129610120809401620002b0565b8382015262000308565b604051906128ca9283620006b884396080518381816106830152611408015260a05183818161172901526126c5015260c051838181610d1a01528181610d7801528181611e000152818161239d0152612456015260e051838181611457015281816123e401526127ba0152518281816119ae0152818161234b01526126ed01525181818161197301528181611af80152818161219101526124c60152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519061014082016001600160401b038111838210176200020a57604052565b620001d5565b6040519190601f01601f191682016001600160401b038111838210176200020a57604052565b5f5b838110620002485750505f910152565b818101518382015260200162000238565b81601f82011215620001d15780516001600160401b0381116200020a576200028b601f8201601f191660200162000210565b9281845260208284010111620001d157620002ad916020808501910162000236565b90565b51906001600160a01b0382168203620001d157565b51906001600160601b0382168203620001d157565b60409160208252620002fc815180928160208601526020868601910162000236565b601f01601f1916010190565b60a081018051610100830151606084015160e08501516101208087015160c088018051929796909562000371956001600160a01b03928316959183169493831693929091169162000369906001600160601b03165b6001600160601b031690565b9385620005f9565b608084016401000000008151116200046157515f947f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b946200045c92620003e0926200035d926040926001600160801b031690520193620003d3855162000503565b516001600160601b031690565b916200043062000424620004246040519687967fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8b80a2516001600160a01b031690565b6001600160a01b031690565b7f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b18780a25182620002da565b0390a2565b604051636ad9efbd60e11b8152600490fd5b90600182811c92168015620004a3575b60208310146200048f57565b634e487b7160e01b5f52602260045260245ffd5b91607f169162000483565b601f8111620004bb575050565b60065f5260205f20906020601f840160051c83019310620004f8575b601f0160051c01905b818110620004ec575050565b5f8155600101620004e0565b9091508190620004d7565b80519091906001600160401b0381116200020a576200052f816200052960065462000473565b620004ae565b602080601f831160011462000574575081906200056393945f9262000568575b50508160011b915f199060031b1c19161790565b600655565b015190505f806200054f565b60065f52601f198316949091907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f925f905b878210620005e0575050836001959610620005c7575b505050811b01600655565b01515f1960f88460031b161c191690555f8080620005bc565b80600185968294968601518155019501930190620005a6565b6080959095525f80546001600160a01b0319166001600160a01b039788161790559094939092918015620006aa578215620006aa57849281600c1b60015580600c1b6002556001600355337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2695f80a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d155f80a21660c052168060e0526200069f5760a052565b60016101005260a052565b63d92e233d5f526004601cfdfe60806040526004361015610011575f80fd5b5f3560e01c8062fdd58e1461028357806301ffc9a71461027e57806305e39833146102795780630e89341c146102745780631a7591411461026f57806322ab47a11461026a5780632a55205a146102655780632c8701a4146102605780632eb2c2d61461025b5780633ccfd60b146102565780633cd8045e1461025157806342abcd661461024c5780634e1273f41461024757806355f804b31461024257806366c879a91461023d578063685d2ca5146102385780636c0360eb14610233578063769da9431461022e578063785e9e86146102295780637cc22f7014610224578063879fbedf1461021f578063893d20e81461021a5780638c01d30814610215578063911f51f914610210578063976228701461020b578063a035b1fe14610206578063a22cb46514610201578063a4ddb2a3146101fc578063a7016023146101f7578063b0f479a1146101f2578063d139e612146101ed578063d5abeb01146101e8578063d6ed2663146101e3578063dfe7a8e5146101de578063e1c38ed9146101d9578063e985e9c5146101d4578063f204ed59146101cf578063f242432a146101ca5763f4f3b200146101c5575f80fd5b611d6a565b611bb9565b611a9a565b611a55565b611a38565b6119d3565b611997565b61194b565b611921565b611904565b61188d565b6117ce565b61174c565b611712565b6116d8565b61165b565b61163e565b611621565b6115a2565b61147b565b61142b565b6113f1565b611303565b61117f565b61109e565b610ec7565b610e0a565b610d9c565b610d4c565b610ce3565b610a51565b6107f8565b610650565b61062b565b6105ef565b6104c0565b610433565b610330565b6102f3565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036102ab57565b5f80fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036102ab57565b359073ffffffffffffffffffffffffffffffffffffffff821682036102ab57565b346102ab5760406003193601126102ab5761030c610288565b60601b679a31110384e0b0c9176020526024355f52602060405f2054604051908152f35b346102ab5760206003193601126102ab576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036102ab57807f01ffc9a70000000000000000000000000000000000000000000000000000000060209214908115610409575b81156103df575b81156103b5575b506040519015158152f35b7f2a55205a000000000000000000000000000000000000000000000000000000009150145f6103aa565b7f0e89341c00000000000000000000000000000000000000000000000000000000811491506103a3565b7fd9b67a26000000000000000000000000000000000000000000000000000000008114915061039c565b346102ab575f6003193601126102ab57602060ff600754166040519015158152f35b5f5b8381106104665750505f910152565b8181015183820152602001610457565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604093602084526104b98151809281602088015260208888019101610455565b0116010190565b346102ab5760206003193601126102ab576004356104ea815f52600860205260405f205460801c90565b156105e25760405160808101604052607f810191600a8060309281810660300186530491825b6105ab576105a761056661059b878760807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092838101920301815261058f60405194859261056060208501611e8c565b90611f36565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b039081018352826106e4565b60405191829182610476565b0390f35b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81939501948181068301865304919082610510565b63bad086ea5f526004601cfd5b346102ab5760206003193601126102ab576004355f52600860205260206fffffffffffffffffffffffffffffffff60405f205416604051908152f35b346102ab575f6003193601126102ab57602060ff60075460081c166040519015158152f35b346102ab5760406003193601126102ab57604073ffffffffffffffffffffffffffffffffffffffff5f54166127106106aa7f0000000000000000000000000000000000000000000000000000000000000000602435611f7a565b0482519182526020820152f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761072557604052565b6106b7565b67ffffffffffffffff81116107255760051b60200190565b929161074d8261072a565b9161075b60405193846106e4565b829481845260208094019160051b81019283116102ab57905b8282106107815750505050565b81356fffffffffffffffffffffffffffffffff811681036102ab578152908301908301610774565b9080601f830112156102ab578160206107c493359101610742565b90565b9181601f840112156102ab5782359167ffffffffffffffff83116102ab576020808501948460051b0101116102ab57565b60606003193601126102ab5761080c610288565b60243567ffffffffffffffff918282116102ab5761082f600492369084016107a9565b926044359081116102ab576108488291369085016107c7565b60ff60035416610a00575b8086515f916109c6575b9361086e6108739261087a96611f7a565b612327565b3691610742565b9033600c1b6001546002548032600c1b148092841416921416146109ba576108a0612013565b916108ab81866124c3565b80518551036109ae578160601b9283156109a257602093679a31110384e0b0c9178452855160051b925f915b828581146109125786019286808287010151918a0101515f5260405f20805491820191821061090657556108d7565b886301336cea5f52601cfd5b508388875f8a6040908151938491838352865160051b82018484018189845afa503d8401828401523d830191885160051b01908189868501925afa503d010301917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb73ffffffffffffffffffffffffffffffffffffffff8816933392a4833b61099757005b6109a09361255a565b005b8463ea553b345f52601cfd5b83633b800a465f52601cfd5b82631648fd015f52601cfd5b833d1515600585901b82015b81156109e1575b50505061085d565b909193602090853501940191818310156109fb57906109d2565b6109d9565b90915060015433600c1b03610a1757908291610853565b83631648fd015f52601cfd5b9181601f840112156102ab5782359167ffffffffffffffff83116102ab57602083818601950101116102ab57565b346102ab5760a06003193601126102ab57610a6a610288565b610a726102af565b906044359167ffffffffffffffff908184116102ab57610a97600494369086016107c7565b90926064358181116102ab57610ab090369088016107c7565b916084359081116102ab57610ac89036908901610a23565b92606097679a31110384e0b0c990891b811796891b1795602097818952818a1c97808b1c978815610cd757893303610cbe575b928b9297969594918b9460051b915f5b838103610c51575050507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb97898b60405194604086528488019b8c967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09b8c809701988960408401378988018b8301528782019360051b809b0196879101809a8501376080818b339501030190a4893b610ba157005b8b9885936040519e8f9d8e809d63bc197c8182523391015260408d01528b0160a0905260c08b013760c0820160808a01528189019360e08501370160e00160a08701520191838801910161010083013701036101040190601c8301905a905f91f115610c3c575b517f43e6837f0000000000000000000000000000000000000000000000000000000001610c3157005b639c05499b5f52601cfd5b3d610c49575f8152610c08565b3d5f803e3d5ffd5b91939697829193965080999a9550013590828d52808501355f526040805f208054808511610cb0578490039055848e525f20805490928101908110610ca4578d925501918b94918d949998979693610b0b565b8f6301336cea5f52601cfd5b50508f63f4d678b85f52601cfd5b335f526034600c2054610afb578c634b6e7f185f52601cfd5b8c63ea553b345f52601cfd5b346102ab575f6003193601126102ab5760025433600c1b03610d3f576109a04773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166124a7565b631648fd015f526004601cfd5b346102ab575f6003193601126102ab57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102ab5760206003193601126102ab576020610dc76004355f52600860205260405f205460801c90565b604051908152f35b60209060206040818301928281528551809452019301915f5b828110610df6575050505090565b835185529381019392810192600101610de8565b346102ab576040806003193601126102ab5767ffffffffffffffff906004358281116102ab57610e3e9036906004016107c7565b90926024359081116102ab57610e589036906004016107c7565b9290918303610eba576040519280845260051b916020946020858501016040525f5b848103610e8f57604051806105a78882610dcf565b80879183013560601b679a31110384e0b0c9178252808401355f52845f205482828901015201610e7a565b633b800a465f526004601cfd5b346102ab576020806003193601126102ab5767ffffffffffffffff6004358181116102ab57610efa903690600401610a23565b9160025433600c1b03610d3f5760ff6007541661107457821161072557610f2b82610f266006546112b2565b611f92565b5f92601f8311600114610fb35750610f7a8280610f82955f91610fa8575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b600655611fff565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f65f80a2005b90508301355f610f49565b60065f527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f915f905b86821061105c57505083610f829510611024575b5050600182811b01600655611fff565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88560031b161c19908301351690555f80611014565b80600184958294958801358155019401920190611000565b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b346102ab575f6003193601126102ab5760025433600c1b03610d3f5760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006007541617600755604051806110f281611e8c565b0390207f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca05f80a2005b60606003198201126102ab5760043573ffffffffffffffffffffffffffffffffffffffff811681036102ab579167ffffffffffffffff6024358181116102ab5783611168916004016107a9565b926044359182116102ab576107c4916004016107a9565b6111883661111b565b909133600c1b6001546002548032600c1b14809284141692141614610d3f576111af612013565b916111ba81856124c3565b8051845103610eba578160601b9283156112a557602093679a31110384e0b0c9178452845160051b925f915b82858114611222578601928680828701015191890101515f5260405f20805491820191821061121557556111e6565b6301336cea5f526004601cfd5b508387875f604080518093828252855160051b8101838301818860045afa503d8301818301523d820190875160051b01838201818960045afa503d010301917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb73ffffffffffffffffffffffffffffffffffffffff8816933392a4833b61099757005b63ea553b345f526004601cfd5b90600182811c921680156112f9575b60208310146112cc57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f16916112c1565b346102ab575f6003193601126102ab576040515f600654611323816112b2565b808452906020906001908181169081156113a95750600114611350575b6105a78561059b818703826106e4565b60065f90815293507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b8385106113965750505050810160200161059b826105a7611340565b805486860184015293820193810161137a565b8695506105a79693506020925061059b9491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b8201019293611340565b346102ab575f6003193601126102ab5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102ab575f6003193601126102ab57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6114843661111b565b909133600c1b6001546002548032600c1b14809284141692141614610d3f576114ad828461282c565b8060601b9160209280679a31110384e0b0c91784521560011715611579575b835160051b915f905b81848114611511578501918580828601015191880101515f5260405f20908154808211611504570390556114d5565b63f4d678b85f526004601cfd5b5f82877f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8a88604090815192828452805160051b860190818486019160045afa503d8201858401523d830194815160051b0190818387019160045afa508133943d01030190a4005b5f80526034600c20546114cc57634b6e7f185f526004601cfd5b6004359081151582036102ab57565b346102ab5760206003193601126102ab576115bb611593565b60025433600c1b03610d3f576007547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff0083151560081b169116176007557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e65f80a2005b346102ab575f6003193601126102ab57600254600c1c5f5260205ff35b346102ab575f6003193601126102ab576020600554604051908152f35b346102ab575f6003193601126102ab57602060ff600354166040519015158152f35b60031960609101126102ab5760043573ffffffffffffffffffffffffffffffffffffffff811681036102ab57906fffffffffffffffffffffffffffffffff9060243582811681036102ab579160443590811681036102ab5790565b6116e13661167d565b60ff600393929354166116f9575b6109a09282612130565b60015433600c1b146116ef57631648fd015f526004601cfd5b346102ab575f6003193601126102ab5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102ab5760406003193601126102ab57611765610288565b602435908115158092036102ab5773ffffffffffffffffffffffffffffffffffffffff91679a31110384e0b0c960205233601452815f52806034600c20555f5216337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160205fa3005b60606003193601126102ab5767ffffffffffffffff6004358181116102ab57366023820112156102ab5780600401356118068161072a565b9161181460405193846106e4565b8183526020916024602085019160051b830101913683116102ab57602401905b8282106118765785856024358281116102ab576118559036906004016107a9565b6044359283116102ab576118706109a09336906004016107a9565b91612036565b838091611882846102d2565b815201910190611834565b346102ab5760206003193601126102ab576118a6610288565b33600c1b6001546002548032600c1b14809284141692141614610d3f5780156118f75780600c1b600255337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2695f80a3005b63d92e233d5f526004601cfd5b346102ab575f6003193601126102ab57600154600c1c5f5260205ff35b346102ab5760206003193601126102ab5761193a611593565b60025433600c1b03610d3f57600355005b346102ab575f6003193601126102ab5760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102ab575f6003193601126102ab5760206040517f000000000000000000000000000000000000000000000000000000000000000015158152f35b60406003193601126102ab576fffffffffffffffffffffffffffffffff60043581811681036102ab5760243591821682036102ab5760ff60035416611a1f575b6109a091339133612130565b60015433600c1b14611a1357631648fd015f526004601cfd5b346102ab575f6003193601126102ab576020600454604051908152f35b346102ab5760406003193601126102ab57611a6e610288565b611a766102af565b90679a31110384e0b0c96020526014525f5260206034600c20546040519015158152f35b611aa33661167d565b33600c1b6001546002548032600c1b14809284141692141614610d3f576fffffffffffffffffffffffffffffffff808093169116611adf612013565b926008602052815f5260405f209081548060801c8501907f00000000000000000000000000000000000000000000000000000000000000008211611bac57859160801b9216011790558360601b156112a557679a31110384e0b0c960205283601452805f5260405f208054908382019182106112155755805f528160205273ffffffffffffffffffffffffffffffffffffffff84165f337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b611ba357005b6109a093612627565b63d05cb6095f526004601cfd5b346102ab5760a06003193601126102ab57611bd2610288565b611bda6102af565b604435906064356084359367ffffffffffffffff85116102ab57611c0360049536908701610a23565b9091679a31110384e0b0c99060601b81179460601b179160209480865260601c938360601c938415611d5e57853303611d45575b875f5260405f208054808411611d39578390039055865260405f20805490828201918210611d2d57558086528385337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260405fa4833b611c9357005b60405196879563f23a6e618752338888015260408701526060860152608085015260a0808501527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828601910160c085013760c401905f601c8401915af115611d20575b517f0dc5919f0000000000000000000000000000000000000000000000000000000001610c3157005b3d610c49575f8152611cf7565b896301336cea5f52601cfd5b8a63f4d678b85f52601cfd5b335f526034600c2054611c375788634b6e7f185f52601cfd5b8863ea553b345f52601cfd5b346102ab5760206003193601126102ab57611d83610288565b60025433600c1b03610d3f5780156118f75773ffffffffffffffffffffffffffffffffffffffff809116604051917f70a08231000000000000000000000000000000000000000000000000000000008352306004840152602083602481855afa908115611e87575f80936044936010936020978492611e58575b507f0000000000000000000000000000000000000000000000000000000000000000166014526034526fa9059cbb00000000000000000000000082525af13d1560015f5114171615611e4b57005b6390b8ec185f526004601cfd5b611e79919250883d8a11611e80575b611e7181836106e4565b81019061230d565b905f611dfd565b503d611e67565b61231c565b6006545f9291611e9b826112b2565b91600190818116908115611f055750600114611eb657505050565b909192935060065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f905f915b848310611ef2575050500190565b8181602092548587015201920191611ee4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050811515909102019150565b90611f4960209282815194859201610455565b0190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810292918115918404141715611f8d57565b611f4d565b601f8111611f9e575050565b60065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f906020601f840160051c83019310611ff5575b601f0160051c01905b818110611fea575050565b5f8155600101611fdf565b9091508190611fd6565b81604051928392833781015f815203902090565b604051906020820182811067ffffffffffffffff821117610725576040525f8252565b9033600c1b926001936001546002548032600c1b14809284141692141614610d3f5781519280518414825185141615610eba575f5b84811061207a57505050505050565b806120e973ffffffffffffffffffffffffffffffffffffffff61209e8994866120ef565b51166fffffffffffffffffffffffffffffffff6120e3816120bf868b6120ef565b5116916120cc868a6120ef565b51166fffffffffffffffffffffffffffffffff1690565b91612253565b0161206b565b80518210156121035760209160051b010190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b92906121506fffffffffffffffffffffffffffffffff8094169283612327565b33600c1b6001546002548032600c1b14809284141692141614610d3f57821690612178612013565b926008602052815f5260405f209081548060801c8501907f00000000000000000000000000000000000000000000000000000000000000008211611bac57859160801b9216011790558360601b156112a557679a31110384e0b0c960205283601452805f5260405f208054908382019182106112155755805f528160205273ffffffffffffffffffffffffffffffffffffffff84165f337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b612241575b50505050565b61224a93612627565b5f80808061223b565b90916008602052825f5260405f2080546fffffffffffffffffffffffffffffffff16908282039180831190151761230057558160601b80679a31110384e0b0c91760205215600117156122e6575b825f5260405f209283549384831161150457825f950390558352602052337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604084a4565b5f80526034600c20546122a157634b6e7f185f526004601cfd5b63ce3a3d375f526004601cfd5b908160209103126102ab575190565b6040513d5f823e3d90fd5b60ff60075460081c161561247d578161233f916126c1565b9081612349575050565b7f00000000000000000000000000000000000000000000000000000000000000001561242957600554828101809111611f8d576005556040519160605273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660405260601b602c526f23b872dd000000000000000000000000600c5260205f6064601c827f00000000000000000000000000000000000000000000000000000000000000005af13d1560015f511417161561241c575f606052604052565b637939f4245f526004601cfd5b5060045490808201809211611f8d5761247b9160045573ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166124a7565b565b60046040517f2d0a3f8e000000000000000000000000000000000000000000000000000000008152fd5b5f80809381935af1156124b657565b63b12d13eb5f526004601cfd5b907f000000000000000000000000000000000000000000000000000000000000000082519180518303610eba5791602084818080970195019260051b0101925b838103612511575050505050565b6008855280515f5260405f209081549060809282841c85510192868411611bac57889485948751911b916fffffffffffffffffffffffffffffffff160117905501910190612503565b60a460209392604051958694859263bc197c81845233888501525f604085015260a06060850152805160051b8801908160c086019160045afa5060a03d80820160808601523d850192805160051b8a01908160c086019160045afa503d010160a08401523d019080518701908160c084019160045afa503d010301905f601c8401915af11561261a575b517f43e6837f000000000000000000000000000000000000000000000000000000000161260d57565b639c05499b5f526004601cfd5b3d610c49575f81526125e4565b6020929360405194859363f23a6e61855233868601525f60408601526060850152608084015260a08084015280518091818060c08701526126ad575b505060c401905f601c8401915af1156126a0575b517f0dc5919f000000000000000000000000000000000000000000000000000000000161260d57565b3d610c49575f8152612677565b818660e08701920160045afa50805f612663565b91907f0000000000000000000000000000000000000000000000000000000000000000908115612825577f000000000000000000000000000000000000000000000000000000000000000061274e575061271d34933492611f7a565b0361272457565b60046040517f68e26200000000000000000000000000000000000000000000000000000000008152fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015230602482015292906020848060448101038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa938415611e87575f946127fe575b50906127f591611f7a565b80921061272457565b6127f59291945061281d9060203d602011611e8057611e7181836106e4565b9390916127ea565b505f925050565b9081519080518203610eba5790602083818080960194019260051b0101915b8281036128585750505050565b6008845280515f5260405f2080546fffffffffffffffffffffffffffffffff16918284518103118315176123005785928392550191019061284b56fea26469706673582212200653e1670a9142d7f5c0558e05a20580e2ae7d96eb03aa9e14c865464f91b46364736f6c63430008160033";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      ERC1155Basic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC1155Basic__factory {
    return super.connect(runner) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1155Basic {
    return new Contract(address, _abi, runner) as unknown as ERC1155Basic;
  }
}
